name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: heterodox-main
      cancel-in-progress: true
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (for client build)
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm
          cache-dependency-path: client/package-lock.json

      - name: Build client
        working-directory: client
        env:
          # Optional: avoid registry flakiness
          NPM_CONFIG_AUDIT: "false"
          NPM_CONFIG_FUND: "false"
        run: |
          set -euo pipefail
          npm ci
          npm run build

      - name: Ensure target dirs on VM
        uses: appleboy/ssh-action@v1.2.2
        with:
          host:     ec2-18-199-237-58.eu-central-1.compute.amazonaws.com
          username: ubuntu
          key:      ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail
            mkdir -p /home/ubuntu/heterodox/client/dist
            mkdir -p /home/ubuntu/heterodox/server

      - name: Deploy client build
        uses: easingthemes/ssh-deploy@v5.1.0
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST:      ec2-18-199-237-58.eu-central-1.compute.amazonaws.com
          REMOTE_USER:      ubuntu
          ARGS:             "-avzr --delete"
          SOURCE:           "client/dist/"
          TARGET:           "/home/ubuntu/heterodox/client/dist"

      # --- OPTIONAL: deploy backend code as well ---
      - name: Deploy server code (optional)
        if: ${{ vars.DEPLOY_SERVER == 'true' }}
        uses: easingthemes/ssh-deploy@v5.1.0
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST:      ec2-18-199-237-58.eu-central-1.compute.amazonaws.com
          REMOTE_USER:      ubuntu
          ARGS: >-
            -avzr --delete
            --exclude='.git'
            --exclude='node_modules'
            --exclude='.env'
            --exclude='asa.db'
          SOURCE:           "server/"
          TARGET:           "/home/ubuntu/heterodox/server"

      - name: Post-deploy (restart backend if deployed; reload Caddy)
        uses: appleboy/ssh-action@v1.2.2
        with:
          host:     ec2-18-199-237-58.eu-central-1.compute.amazonaws.com
          username: ubuntu
          key:      ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail
            if [ "${{ vars.DEPLOY_SERVER }}" = "true" ]; then
              cd /home/ubuntu/heterodox/server
              NODE_ENV=production npm ci --omit=dev --no-audit --no-fund

              # Restart backend
              sudo systemctl restart heterodox

              # Wait up to 60s for :4000 to be listening and responsive
              ok=0
              for i in {1..60}; do
                if sudo ss -ltnp | grep -q ':4000'; then
                  code=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout 2 http://127.0.0.1:4000/ || true)
                  # Accept 200/301/302/401 as "up" (401 expected without session)
                  if [[ "$code" =~ ^(200|30[12]|401)$ ]]; then
                    echo "Backend healthy (HTTP $code)"
                    ok=1
                    break
                  fi
                fi
                sleep 1
              done

              if [ "$ok" -ne 1 ]; then
                echo "Backend did not become healthy. Recent logs:"
                sudo systemctl status heterodox --no-pager || true
                sudo journalctl -u heterodox -n 200 --no-pager || true
                exit 1
              fi
            fi

            # Reload Caddy (harmless if unchanged)
            sudo systemctl reload caddy || true
            echo "${{ github.sha }}" | sudo tee /home/ubuntu/heterodox/.deployed_sha >/dev/null
            date -u | sudo tee /home/ubuntu/heterodox/.deployed_at >/dev/null
